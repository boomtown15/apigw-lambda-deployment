# GitLab CI/CD Pipeline Configuration

# Define stages
stages:
  - deploy-dev-integration-test
  - deploy-prod

variables:
  NODE_OPTIONS: "--max-old-space-size=4096"

# Default image for all jobs
image: node:22  # Required by package.json >= 22.0.0

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .npm/

# Install dependencies
before_script:
  #  - *node-setup
  - npm install -g aws-cdk typescript ts-node
  - npm ci --audit=false --no-engine-strict  # Skip audit and engine check for setup

# Deploy Dev
deploy-dev-integration-test:
  stage: deploy-dev-integration-test
  script:
    - npm run test:unit
    # Ensure AWS credentials are available
    - if [ -z "$AWS_ACCESS_KEY_ID" ] || [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
    -   echo "AWS credentials not found"
    -   exit 1
    - fi
    - cdk deploy LambdaCanaryStack-Dev --require-approval never|| {
      echo "Deployment failed. Check CloudFormation console for details.";
      exit 1;
      }
    - npm run test:integration
  environment: development

# Deploy to production
deploy-prod:
  stage: deploy-prod
  script:
    # Ensure AWS credentials are available
    - if [ -z "$AWS_ACCESS_KEY_ID" ] || [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
    -   echo "AWS credentials not found"
    -   exit 1
    - fi
    - cdk deploy LambdaCanaryStack-Prod --require-approval never|| {
      echo "Deployment failed. Check CloudFormation console for details.";
      exit 1;
      }
  environment: production
  needs:
    - deploy-dev-integration-test
